---
http_interactions:
- request:
    method: get
    uri: https://api.hubapi.com/deals/v1/properties?hapikey=demo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 03 Aug 2022 13:46:04 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 734f7f530ce64063-CDG
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Access-Control-Allow-Credentials:
      - 'false'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      X-Hubspot-Correlation-Id:
      - 6d7e2dba-60ec-46ef-a04a-b126a6f21b55
      X-Hubspot-Ratelimit-Daily:
      - '1000000'
      X-Hubspot-Ratelimit-Daily-Remaining:
      - '986149'
      X-Hubspot-Ratelimit-Interval-Milliseconds:
      - '10000'
      X-Hubspot-Ratelimit-Max:
      - '200'
      X-Hubspot-Ratelimit-Remaining:
      - '192'
      X-Hubspot-Ratelimit-Secondly:
      - '20'
      X-Hubspot-Ratelimit-Secondly-Remaining:
      - '19'
      X-Trace:
      - 2B04030BB8E5AE765EC5923CF0239E41CBB03EAE5B000000000000000000
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=5MKcNnySfKPNIpzCfGb974rJ5HPWezkOgx3sRmaFHRakgWSp%2BOCIbzbl4YZ7cE084IU2NFwckqq2s063wX4PnbmZFAciF6%2FbkqSYTYq7i5zCCCWhVhRTgvjCvD1CIFsJ"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 03 Aug 2022 13:46:05 GMT
recorded_with: VCR 6.0.0
