---
http_interactions:
- request:
    method: get
    uri: https://api.hubapi.com/deals/v1/properties?hapikey=demo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 22 Jun 2022 08:50:00 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 71f3bbe1efc599ae-CDG
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Access-Control-Allow-Credentials:
      - 'false'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      X-Hubspot-Correlation-Id:
      - c1113821-98ae-4795-b99c-bf50cdd1dee7
      X-Hubspot-Ratelimit-Daily:
      - '1000000'
      X-Hubspot-Ratelimit-Daily-Remaining:
      - '994097'
      X-Hubspot-Ratelimit-Interval-Milliseconds:
      - '10000'
      X-Hubspot-Ratelimit-Max:
      - '200'
      X-Hubspot-Ratelimit-Remaining:
      - '180'
      X-Hubspot-Ratelimit-Secondly:
      - '20'
      X-Hubspot-Ratelimit-Secondly-Remaining:
      - '18'
      X-Trace:
      - 2B856D5C5FDBE5AFE0DD7B465ACE2D2F9D04BB383D000000000000000000
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=W29u8ZoOsGBIYGxd7DIQ7wPnAvAmixzv2Vyq2WGCE8RGYnEKB85%2BF4Qjom3D8K4UcyVRIrYdTwKrgsOVQMl6GC%2BQgIsaOV3ge1et0%2BeboCuwaCS91zZ8GqeUxwael9fp7zsH4N%2BUs2bTlQlt"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 22 Jun 2022 08:50:00 GMT
recorded_with: VCR 6.1.0
