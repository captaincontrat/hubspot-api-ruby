---
http_interactions:
- request:
    method: get
    uri: https://api.hubapi.com/deals/v1/properties?hapikey=<HAPI_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 22 Jun 2022 08:49:25 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 71f3bb016f3d99eb-CDG
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Access-Control-Allow-Credentials:
      - 'false'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      X-Hubspot-Correlation-Id:
      - '05886b90-bb47-4cb4-bd40-d23b172d547d'
      X-Hubspot-Ratelimit-Daily:
      - '500000'
      X-Hubspot-Ratelimit-Daily-Remaining:
      - '498357'
      X-Hubspot-Ratelimit-Interval-Milliseconds:
      - '10000'
      X-Hubspot-Ratelimit-Max:
      - '150'
      X-Hubspot-Ratelimit-Remaining:
      - '131'
      X-Hubspot-Ratelimit-Secondly:
      - '15'
      X-Hubspot-Ratelimit-Secondly-Remaining:
      - '13'
      X-Trace:
      - 2B156D61256DCF3182CDC15B3F14DA10685929E3AD000000000000000000
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=%2BMPxE1YPFmXtVmOlp0GwPxCFhVM7%2BhKYvq%2FUBFsIv8Utg9UEUhxYXX8x854YptvwgigNFDQEyRnYKr%2BUpacozuIdLQcaJYP37JqOB%2BgsxAm4zX0T2IlWjDrBy5ULfa%2Fa3oap4VMdnyYlsbTt"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"name":"amount_in_home_currency","label":"Amount in company currency","description":"The amount of the deal, using the exchange rate, in your company's currency","groupName":"deal_revenue","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653694962612,"createdAt":1593532658455},{"name":"days_to_close","label":"Days to close","description":"The number of days the deal took to close","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695100102,"createdAt":1565059312984},{"name":"hs_acv","label":"Annual contract value","description":"The annual contract value (ACV) of this deal.","groupName":"deal_revenue","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695359828,"createdAt":1593532658357},{"name":"hs_all_assigned_business_unit_ids","label":"Business units","description":"The business units this record is assigned to.","groupName":"dealinformation","type":"enumeration","fieldType":"checkbox","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hs_all_collaborator_owner_ids","label":"All Collaborator Owner Ids","description":"Owner ids of the users involved in closing the deal","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1655235126448,"createdAt":1651520497305},{"name":"hs_all_deal_split_owner_ids","label":"Deal Split Users","description":"The owner ids of all associated Deal Splits. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695405483,"createdAt":1637681467889},{"name":"hs_analytics_source","label":"Original Source Type","description":"Original source for the contact with the earliest activity for this deal.","groupName":"analyticsinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[{"label":"Organic Search","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"ORGANIC_SEARCH"},{"label":"Paid Search","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"PAID_SEARCH"},{"label":"Email Marketing","displayOrder":2,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"EMAIL_MARKETING"},{"label":"Organic Social","displayOrder":3,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"SOCIAL_MEDIA"},{"label":"Referrals","displayOrder":4,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"REFERRALS"},{"label":"Other Campaigns","displayOrder":5,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"OTHER_CAMPAIGNS"},{"label":"Direct Traffic","displayOrder":6,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"DIRECT_TRAFFIC"},{"label":"Offline Sources","displayOrder":7,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"OFFLINE"},{"label":"Paid Social","displayOrder":8,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"PAID_SOCIAL"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":false,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695641259,"createdAt":1565059313038},{"name":"hs_analytics_source_data_1","label":"Original Source Data 1","description":"Additional information about the original source for the associated contact, or associated company if there is no contact, with the oldest value for the Time first seen property.","groupName":"analyticsinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695656577,"createdAt":1565059313115},{"name":"hs_analytics_source_data_2","label":"Original Source Data 2","description":"Additional information about the original source for the associated contact, or associated company if there is no contact, with the oldest value for the Time first seen property.","groupName":"analyticsinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695671841,"createdAt":1565059313170},{"name":"hs_arr","label":"Annual recurring revenue","description":"The annual recurring revenue (ARR) of this deal.","groupName":"deal_revenue","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695702326,"createdAt":1593532658247},{"name":"hs_campaign","label":"HubSpot Campaign","description":"The marketing campaign the deal is associated with","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695717612,"createdAt":1565059313315},{"name":"hs_closed_amount","label":"Closed Deal Amount","description":"Returns the amount if the deal is closed. Else, returns 0.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695732878,"createdAt":1571085957018},{"name":"hs_closed_amount_in_home_currency","label":"Closed Deal Amount In Home Currency","description":"Returns the amount in home currency if the deal is closed. Else, returns 0.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695748125,"createdAt":1571085957070},{"name":"hs_created_by_user_id","label":"Created by user ID","description":"The user that created this object. This value is automatically set by HubSpot and may not be modified.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1655225215819,"createdAt":1582559471435},{"name":"hs_date_entered_26160401","label":"Date entered 'Appointment Scheduled (New Pipeline)'","description":"The date and time when the deal entered the 'Appointment Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160402","label":"Date entered 'Qualified To Buy (New Pipeline)'","description":"The date and time when the deal entered the 'Qualified To Buy' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160403","label":"Date entered 'Presentation Scheduled (New Pipeline)'","description":"The date and time when the deal entered the 'Presentation Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160404","label":"Date entered 'Decision Maker Bought-In (New Pipeline)'","description":"The date and time when the deal entered the 'Decision Maker Bought-In' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160405","label":"Date entered 'Contract Sent (New Pipeline)'","description":"The date and time when the deal entered the 'Contract Sent' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160406","label":"Date entered 'Closed Won (New Pipeline)'","description":"The date and time when the deal entered the 'Closed Won' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26160407","label":"Date entered 'Closed Lost (New Pipeline)'","description":"The date and time when the deal entered the 'Closed Lost' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_entered_26544539","label":"Date entered 'Appointment Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Appointment Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544540","label":"Date entered 'Qualified To Buy (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Qualified To Buy' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544541","label":"Date entered 'Presentation Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Presentation Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544542","label":"Date entered 'Decision Maker Bought-In (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Decision Maker Bought-In' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544543","label":"Date entered 'Contract Sent (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Contract Sent' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544544","label":"Date entered 'Closed Won (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Closed Won' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_26544545","label":"Date entered 'Closed Lost (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal entered the 'Closed Lost' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_entered_appointmentscheduled","label":"Date entered 'Appointment Scheduled (Sales Pipeline)'","description":"The date and time when the deal entered the 'Appointment Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695793685,"createdAt":1581446561452},{"name":"hs_date_entered_closedlost","label":"Date entered 'Closed Lost (Sales Pipeline)'","description":"The date and time when the deal entered the 'Closed Lost' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695808924,"createdAt":1581446670382},{"name":"hs_date_entered_closedwon","label":"Date entered 'Closed Won (Sales Pipeline)'","description":"The date and time when the deal entered the 'Closed Won' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695824172,"createdAt":1581446653551},{"name":"hs_date_entered_contractsent","label":"Date entered 'Contract Sent (Sales Pipeline)'","description":"The date and time when the deal entered the 'Contract Sent' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695839427,"createdAt":1581446637538},{"name":"hs_date_entered_decisionmakerboughtin","label":"Date entered 'Decision Maker Bought-In (Sales Pipeline)'","description":"The date and time when the deal entered the 'Decision Maker Bought-In' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695854669,"createdAt":1581446621289},{"name":"hs_date_entered_presentationscheduled","label":"Date entered 'Presentation Scheduled (Sales Pipeline)'","description":"The date and time when the deal entered the 'Presentation Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695869911,"createdAt":1581446606610},{"name":"hs_date_entered_qualifiedtobuy","label":"Date entered 'Qualified To Buy (Sales Pipeline)'","description":"The date and time when the deal entered the 'Qualified To Buy' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695885195,"createdAt":1581446590231},{"name":"hs_date_exited_26160401","label":"Date exited 'Appointment Scheduled (New Pipeline)'","description":"The date and time when the deal exited the 'Appointment Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160402","label":"Date exited 'Qualified To Buy (New Pipeline)'","description":"The date and time when the deal exited the 'Qualified To Buy' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160403","label":"Date exited 'Presentation Scheduled (New Pipeline)'","description":"The date and time when the deal exited the 'Presentation Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160404","label":"Date exited 'Decision Maker Bought-In (New Pipeline)'","description":"The date and time when the deal exited the 'Decision Maker Bought-In' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160405","label":"Date exited 'Contract Sent (New Pipeline)'","description":"The date and time when the deal exited the 'Contract Sent' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160406","label":"Date exited 'Closed Won (New Pipeline)'","description":"The date and time when the deal exited the 'Closed Won' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26160407","label":"Date exited 'Closed Lost (New Pipeline)'","description":"The date and time when the deal exited the 'Closed Lost' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_date_exited_26544539","label":"Date exited 'Appointment Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Appointment Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544540","label":"Date exited 'Qualified To Buy (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Qualified To Buy' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544541","label":"Date exited 'Presentation Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Presentation Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544542","label":"Date exited 'Decision Maker Bought-In (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Decision Maker Bought-In' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544543","label":"Date exited 'Contract Sent (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Contract Sent' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544544","label":"Date exited 'Closed Won (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Closed Won' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_26544545","label":"Date exited 'Closed Lost (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The date and time when the deal exited the 'Closed Lost' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_date_exited_appointmentscheduled","label":"Date exited 'Appointment Scheduled (Sales Pipeline)'","description":"The date and time when the deal exited the 'Appointment Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695900445,"createdAt":1581446569082},{"name":"hs_date_exited_closedlost","label":"Date exited 'Closed Lost (Sales Pipeline)'","description":"The date and time when the deal exited the 'Closed Lost' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695915707,"createdAt":1581446678966},{"name":"hs_date_exited_closedwon","label":"Date exited 'Closed Won (Sales Pipeline)'","description":"The date and time when the deal exited the 'Closed Won' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695930958,"createdAt":1581446658739},{"name":"hs_date_exited_contractsent","label":"Date exited 'Contract Sent (Sales Pipeline)'","description":"The date and time when the deal exited the 'Contract Sent' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695946201,"createdAt":1581446642815},{"name":"hs_date_exited_decisionmakerboughtin","label":"Date exited 'Decision Maker Bought-In (Sales Pipeline)'","description":"The date and time when the deal exited the 'Decision Maker Bought-In' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695961452,"createdAt":1581446626148},{"name":"hs_date_exited_presentationscheduled","label":"Date exited 'Presentation Scheduled (Sales Pipeline)'","description":"The date and time when the deal exited the 'Presentation Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695976736,"createdAt":1581446611307},{"name":"hs_date_exited_qualifiedtobuy","label":"Date exited 'Qualified To Buy (Sales Pipeline)'","description":"The date and time when the deal exited the 'Qualified To Buy' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"datetime","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695992024,"createdAt":1581446595688},{"name":"hs_deal_amount_calculation_preference","label":"Deal amount calculation preference","description":"Specifies how deal amount should be calculated from line items","groupName":"dealinformation","type":"enumeration","fieldType":"radio","fieldLevelPermission":null,"options":[{"label":"Total Contract Value","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"TCV"},{"label":"Annual Recurring Revenue","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"ARR"},{"label":"Monthly Recurring Revenue","displayOrder":2,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"MRR"},{"label":"Custom","displayOrder":3,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"CUSTOM"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":false,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696007284,"createdAt":1565059313235},{"name":"hs_deal_stage_probability","label":"Deal probability","description":"The probability a deal will close. This defaults to the deal stage probability setting.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"percentage","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696037965,"createdAt":1627568744469},{"name":"hs_deal_stage_probability_shadow","label":"Deal stage probability shadow","description":"Fall back property for calculating the deal stage when no customer override exist.  Probability between 0 and 1 of deal stage. Defaults to 0 for unknown deal stages.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696053229,"createdAt":1621517530289},{"name":"hs_forecast_amount","label":"Forecast amount","description":"The custom forecasted deal value calculated by multiplying the forecast probability and deal amount in your company’s currency.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"currency","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696068498,"createdAt":1604002965530},{"name":"hs_forecast_probability","label":"Forecast probability","description":"The custom percent probability a deal will close.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"percentage","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696083786,"createdAt":1604002668778},{"name":"hs_is_closed","label":"Is Deal Closed?","description":"True if the deal was won or lost.","groupName":"dealinformation","type":"bool","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696099091,"createdAt":1570463148973},{"name":"hs_is_closed_won","label":"Is Closed Won","description":"True if the deal is in the closed won state, false otherwise","groupName":"deal_activity","type":"bool","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696114367,"createdAt":1616174169655},{"name":"hs_is_deal_split","label":"Deal Split Added","description":"Indicates if the deal is split between multiple users.","groupName":"dealinformation","type":"bool","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696129773,"createdAt":1630516822955},{"name":"hs_lastmodifieddate","label":"Last Modified Date","description":"Most recent timestamp of any property update for this deal. This includes HubSpot internal properties, which can be visible or hidden. This property is updated automatically.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696160168,"createdAt":1593532658258},{"name":"hs_likelihood_to_close","label":"Likelihood to close by the close date","description":"Hubspot predicted likelihood between 0 and 1 of the deal to close by the close date.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696190610,"createdAt":1581114666307},{"name":"hs_line_item_global_term_hs_discount_percentage","label":"Global Term Line Item Discount Percentage","description":"For internal HubSpot Application use only. Global term for the discount percentage applied.","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696206091,"createdAt":1596563911672},{"name":"hs_line_item_global_term_hs_discount_percentage_enabled","label":"Global Term Line Item Discount Percentage Enabled","description":"For internal HubSpot Application use only. Indicates if the Global term for the discount percentage is enabled.","groupName":"dealinformation","type":"bool","fieldType":"booleancheckbox","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696221373,"createdAt":1599841610864},{"name":"hs_line_item_global_term_hs_recurring_billing_period","label":"Global Term Line Item Recurring Billing Period","description":"For internal HubSpot Application use only. Global term for product recurring billing duration.","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696236657,"createdAt":1596563924389},{"name":"hs_line_item_global_term_hs_recurring_billing_period_enabled","label":"Global Term Line Item Recurring Billing Period Enabled","description":"For internal HubSpot Application use only. Indicates if the Global term for product recurring billing duration is enabled.","groupName":"dealinformation","type":"bool","fieldType":"booleancheckbox","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696251958,"createdAt":1599841623492},{"name":"hs_line_item_global_term_hs_recurring_billing_start_date","label":"Global Term Line Item Recurring Billing Start Date","description":"For internal HubSpot Application use only. Global term for recurring billing start date for a line item.","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696267210,"createdAt":1596563930722},{"name":"hs_line_item_global_term_hs_recurring_billing_start_date_enabled","label":"Global Term Line Item Recurring Billing Start Date Enabled","description":"For internal HubSpot Application use only. Indicates if the Global term for recurring billing start date for a line item is enabled.","groupName":"dealinformation","type":"bool","fieldType":"booleancheckbox","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696282476,"createdAt":1599841630044},{"name":"hs_line_item_global_term_recurringbillingfrequency","label":"Global Term Line Item Recurring Billing Frequency","description":"For internal HubSpot Application use only. Global term for how frequently the product is billed.","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":"NOT_ANALYZED_TEXT","isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696297730,"createdAt":1596563917932},{"name":"hs_line_item_global_term_recurringbillingfrequency_enabled","label":"Global Term Line Item Recurring Billing Frequency Enabled","description":"For internal HubSpot Application use only. Indicates if the Global term for how frequently the product is billed is enabled","groupName":"dealinformation","type":"bool","fieldType":"booleancheckbox","fieldLevelPermission":null,"options":[{"label":"True","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"true"},{"label":"False","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"false"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":false,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696312996,"createdAt":1599841617093},{"name":"hs_manual_forecast_category","label":"Forecast category","description":"The likelihood a deal will close. This property is used for manual forecasting your deals.","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[{"label":"Not forecasted","displayOrder":1,"hidden":false,"doubleData":0.0,"readOnly":true,"description":"","value":"OMIT"},{"label":"Pipeline","displayOrder":2,"hidden":false,"doubleData":0.0,"readOnly":false,"description":"","value":"PIPELINE"},{"label":"Best case","displayOrder":3,"hidden":false,"doubleData":0.0,"readOnly":false,"description":"","value":"BEST_CASE"},{"label":"Commit","displayOrder":4,"hidden":false,"doubleData":0.0,"readOnly":false,"description":"","value":"COMMIT"},{"label":"Closed won","displayOrder":5,"hidden":false,"doubleData":0.0,"readOnly":true,"description":"","value":"CLOSED"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":true,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696358885,"createdAt":1593532658339},{"name":"hs_merged_object_ids","label":"Merged object IDs","description":"The list of object IDs that have been merged into this object. This value is automatically set by HubSpot and may not be modified.","groupName":"dealinformation","type":"enumeration","fieldType":"checkbox","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hs_mrr","label":"Monthly recurring revenue","description":"The monthly recurring revenue (MRR) of this deal.","groupName":"deal_revenue","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696389497,"createdAt":1593532658442},{"name":"hs_next_step","label":"Next step","description":"A short description of the next step for the deal","groupName":"dealinformation","type":"string","fieldType":"textarea","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":"multi_line","optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696404757,"createdAt":1594413678146},{"name":"hs_num_associated_deal_splits","label":"Number of Deal Splits","description":"The number of deal splits associated with this deal. This property is set automatically by HubSpot.","groupName":"deal_activity","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696450535,"createdAt":1616100092514},{"name":"hs_num_target_accounts","label":"Number of target accounts","description":"The number of target account companies associated with this deal. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696465796,"createdAt":1617390770614},{"name":"hs_object_id","label":"Deal ID","description":"The unique ID for this deal. This unique ID is automatically populated by HubSpot and cannot be changed.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696481054,"createdAt":1565059313202},{"name":"hs_predicted_amount","label":"The predicted deal amount","description":"Returns the multiplication of the deal amount times the predicted likelihood of the deal to close by the close date.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696496264,"createdAt":1581114823508},{"name":"hs_predicted_amount_in_home_currency","label":"The predicted deal amount in your company's currency","description":"Returns the multiplication of the deal amount in your company's currency times the predicted likelihood of the deal to close by the close date.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696511557,"createdAt":1581115122351},{"name":"hs_priority","label":"Priority","description":"","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[{"label":"Low","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"low"},{"label":"Medium","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"medium"},{"label":"High","displayOrder":2,"hidden":false,"doubleData":null,"readOnly":false,"description":null,"value":"high"}],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696526839,"createdAt":1618339493526},{"name":"hs_projected_amount","label":"Weighted amount","description":"Returns the multiplication of the amount times the probability of the deal closing.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696557395,"createdAt":1627568799754},{"name":"hs_projected_amount_in_home_currency","label":"Weighted amount in company currency","description":"Returns the multiplication of the amount in home currency times the probability of the deal closing.","groupName":"dealinformation","type":"number","fieldType":"calculation_equation","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696587975,"createdAt":1627568843100},{"name":"hs_tcv","label":"Total contract value","description":"The total contract value (TCV) of this deal.","groupName":"deal_revenue","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696633836,"createdAt":1593532658369},{"name":"hs_time_in_26160401","label":"Time in 'Appointment Scheduled (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Appointment Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160402","label":"Time in 'Qualified To Buy (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Qualified To Buy' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160403","label":"Time in 'Presentation Scheduled (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Presentation Scheduled' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160404","label":"Time in 'Decision Maker Bought-In (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Decision Maker Bought-In' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160405","label":"Time in 'Contract Sent (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Contract Sent' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160406","label":"Time in 'Closed Won (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Closed Won' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26160407","label":"Time in 'Closed Lost (New Pipeline)'","description":"The total time in seconds spent by the deal in the 'Closed Lost' stage, 'New Pipeline' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655457065123,"createdAt":1655457065123},{"name":"hs_time_in_26544539","label":"Time in 'Appointment Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Appointment Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544540","label":"Time in 'Qualified To Buy (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Qualified To Buy' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544541","label":"Time in 'Presentation Scheduled (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Presentation Scheduled' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544542","label":"Time in 'Decision Maker Bought-In (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Decision Maker Bought-In' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544543","label":"Time in 'Contract Sent (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Contract Sent' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544544","label":"Time in 'Closed Won (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Closed Won' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_26544545","label":"Time in 'Closed Lost (New Pipeline 801e2c9f41ea734d1700c2931000f5a9)'","description":"The total time in seconds spent by the deal in the 'Closed Lost' stage, 'New Pipeline 801e2c9f41ea734d1700c2931000f5a9' pipeline","groupName":"deal_activity","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655887764400,"createdAt":1655887764400},{"name":"hs_time_in_appointmentscheduled","label":"Time in 'Appointment Scheduled (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Appointment Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696649139,"createdAt":1581446582193},{"name":"hs_time_in_closedlost","label":"Time in 'Closed Lost (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Closed Lost' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696664427,"createdAt":1581446684326},{"name":"hs_time_in_closedwon","label":"Time in 'Closed Won (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Closed Won' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696679683,"createdAt":1581446664100},{"name":"hs_time_in_contractsent","label":"Time in 'Contract Sent (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Contract Sent' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696694949,"createdAt":1581446648472},{"name":"hs_time_in_decisionmakerboughtin","label":"Time in 'Decision Maker Bought-In (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Decision Maker Bought-In' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696710221,"createdAt":1581446631900},{"name":"hs_time_in_presentationscheduled","label":"Time in 'Presentation Scheduled (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Presentation Scheduled' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696725476,"createdAt":1581446616284},{"name":"hs_time_in_qualifiedtobuy","label":"Time in 'Qualified To Buy (Sales Pipeline)'","description":"The total time in seconds spent by the deal in the 'Qualified To Buy' stage, 'Sales Pipeline' pipeline","groupName":"dealinformation","type":"number","fieldType":"calculation_read_time","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"duration","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696740758,"createdAt":1581446601488},{"name":"hs_unique_creation_key","label":"Unique creation key","description":"Unique property used for idempotent creates","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":true,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hs_updated_by_user_id","label":"Updated by user ID","description":"The user that last updated this object. This value is automatically set by HubSpot and may not be modified.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696756053,"createdAt":1582559605402},{"name":"hs_user_ids_of_all_notification_followers","label":"User IDs of all notification followers","description":"The user IDs of all users that have clicked follow within the object to opt-in to getting follow notifications","groupName":"dealinformation","type":"enumeration","fieldType":"checkbox","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hs_user_ids_of_all_notification_unfollowers","label":"User IDs of all notification unfollowers","description":"The user IDs of all object owners that have clicked unfollow within the object to opt-out of getting follow notifications","groupName":"dealinformation","type":"enumeration","fieldType":"checkbox","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hs_user_ids_of_all_owners","label":"User IDs of all owners","description":"The user IDs of all owners of this object","groupName":"dealinformation","type":"enumeration","fieldType":"checkbox","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":"unformatted","currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":null,"createdAt":null},{"name":"hubspot_owner_assigneddate","label":"Owner Assigned Date","description":"The date the most recent deal owner was assigned to a deal. This is updated automatically by HubSpot.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":-1,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696786342,"createdAt":1593532658224},{"name":"dealname","label":"Deal Name","description":"The name given to this deal.","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":0,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695145880,"createdAt":1565059312132},{"name":"my_new_property_0d4453d8886aeef288c3bfbdd555178d","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655817869455,"createdAt":1655817869455},{"name":"my_new_property_0ddd0b9ea33c4a34ccb88856024e1b74","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816429740,"createdAt":1655816429740},{"name":"my_new_property_1ce1bdddb3cd3cf364544298880b669e","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655818121754,"createdAt":1655818121392},{"name":"my_new_property_42b0549d31c90b6bcb34fbdb54c9eaa6","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816430383,"createdAt":1655816430041},{"name":"my_new_property_49356cd4278e33908476f2b82061902d","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655885698435,"createdAt":1655885698175},{"name":"my_new_property_5746b126b043c01436caf64954da7890","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816172263,"createdAt":1655816172263},{"name":"my_new_property_5dd2908fd227a871cf97584ea9a96bc6","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816548733,"createdAt":1655816548461},{"name":"my_new_property_6e0b95b509a7ca0a8acccf3b350205ca","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816235677,"createdAt":1655816235677},{"name":"my_new_property_87e29b63f83ec51f0a4c36dfca6f10da","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655818121019,"createdAt":1655818121019},{"name":"my_new_property_adbdfdb578c721d4cd3a52b655cac3b2","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655885697884,"createdAt":1655885697884},{"name":"my_new_property_b3ef5b8a0b90fd054fe3a6687d5b72bf","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816482452,"createdAt":1655816482165},{"name":"my_new_property_b9c52d3047e459aeb6a78ef4b931e885","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816548136,"createdAt":1655816548136},{"name":"my_new_property_bdfdbfeb3950001d6f1d52a75b8e5d04","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816481820,"createdAt":1655816481820},{"name":"my_new_property_e6972dfd9303ddd7b6b81a33b60d68c8","label":"This is my new property","description":"What is their favorite flavor?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655817870094,"createdAt":1655817869801},{"name":"my_new_property_ea9e6dba7d3c893f9419fd038514936d","label":"This is my new property","description":"How much money do you have?","groupName":"dealinformation","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":true,"displayOrder":0,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":null,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":false,"updatedAt":1655816332986,"createdAt":1655816332986},{"name":"amount","label":"Amount","description":"The total amount of the deal","groupName":"deal_revenue","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":2,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":2,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":true,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":"deal_currency_code","textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653694932048,"createdAt":1593532658293},{"name":"dealstage","label":"Deal Stage","description":"The stage of the deal. Deal stages allow you to categorize and track the progress of the deals that you are working on.","groupName":"deal_activity","type":"enumeration","fieldType":"radio","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":3,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":3,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":true,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695176440,"createdAt":1593532658180},{"name":"pipeline","label":"Pipeline","description":"The pipeline the deal is in. This determines which stages are options for the deal.","groupName":"deal_activity","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":4,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":4,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653697045257,"createdAt":1593532658191},{"name":"closedate","label":"Close Date","description":"Date the deal was closed. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":5,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":5,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695054309,"createdAt":1593532658500},{"name":"createdate","label":"Create Date","description":"Date the deal was created. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":6,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695084842,"createdAt":1593532658305},{"name":"engagements_last_meeting_booked","label":"Date of last meeting booked in meetings tool","description":"The date of the most recent meeting an associated contact has booked through the meetings tool.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695237662,"createdAt":1593532658391},{"name":"engagements_last_meeting_booked_campaign","label":"Campaign of last booking in meetings tool","description":"This UTM parameter shows which marketing campaign (e.g. a specific email) referred an associated contact to the meetings tool for their most recent booking. This property is only populated when you add tracking parameters to your meeting link.","groupName":"deal_activity","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695268185,"createdAt":1593532658202},{"name":"engagements_last_meeting_booked_medium","label":"Medium of last booking in meetings tool","description":"This UTM parameter shows which channel (e.g. email) referred an associated contact to the meetings tool for their most recent booking. This property is only populated when you add tracking parameters to your meeting link.","groupName":"deal_activity","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695298684,"createdAt":1593532658512},{"name":"engagements_last_meeting_booked_source","label":"Source of last booking in meetings tool","description":"This UTM parameter shows which site (e.g. Twitter) referred an associated contact to the meetings tool for their most recent booking. This property is only populated when you add tracking parameters to your meeting link. ","groupName":"deal_activity","type":"string","fieldType":"text","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695329234,"createdAt":1593532658235},{"name":"hs_latest_meeting_activity","label":"Latest meeting activity","description":"The date of the most recent meeting (past or upcoming) logged for, scheduled with, or booked by a contact associated with this deal.","groupName":"dealinformation","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696175346,"createdAt":1581114322440},{"name":"hs_sales_email_last_replied","label":"Recent Sales Email Replied Date","description":"The last time a tracked sales email was replied to for this deal","groupName":"dealinformation","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696603282,"createdAt":1565059313649},{"name":"hubspot_owner_id","label":"Deal owner","description":"User the deal is assigned to. Assign additional users to a deal record by creating a custom user property.","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":"OWNER","externalOptionsReferenceType":"OWNER","optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696816624,"createdAt":1593532658418},{"name":"notes_last_contacted","label":"Last Contacted","description":"The last time a call, sales email, or meeting was logged for this deal. This is set automatically by HubSpot based on user actions.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696877308,"createdAt":1593532658430},{"name":"notes_last_updated","label":"Last Activity Date","description":"The last time a note, call, email, meeting, or task was logged for a deal. This is updated automatically by HubSpot.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696907842,"createdAt":1593532658281},{"name":"notes_next_activity_date","label":"Next Activity Date","description":"The date of the next upcoming activity for a deal. This property is set automatically by HubSpot based on user action. This includes logging a future call, sales email, or meeting using the Log feature, as well as creating a future task or scheduling a future meeting. This is updated automatically by HubSpot.","groupName":"deal_activity","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696938357,"createdAt":1593532658326},{"name":"num_contacted_notes","label":"Number of times contacted","description":"The total number of sales activities (notes, calls, emails, meetings, or tasks) logged for a deal. This is updated automatically by HubSpot.","groupName":"deal_activity","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696984152,"createdAt":1593532658490},{"name":"num_notes","label":"Number of Sales Activities","description":"The total number of times a sales email or call has been logged for a deal. This is updated automatically by HubSpot.","groupName":"deal_activity","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":6,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653697014726,"createdAt":1593532658523},{"name":"hs_createdate","label":"HubSpot Create Date","description":"The date the deal was created. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"datetime","fieldType":"date","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":7,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":7,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695778537,"createdAt":1565059312503},{"name":"hubspot_team_id","label":"HubSpot Team","description":"Primary team of the deal owner. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":7,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696846916,"createdAt":1593532658380},{"name":"dealtype","label":"Deal Type","description":"The type of deal. By default, categorize your deal as either a New Business or Existing Business.","groupName":"dealinformation","type":"enumeration","fieldType":"radio","fieldLevelPermission":null,"options":[{"label":"New Business","displayOrder":0,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"newbusiness"},{"label":"Existing Business","displayOrder":1,"hidden":false,"doubleData":null,"readOnly":null,"description":null,"value":"existingbusiness"}],"readOnlyDefinition":true,"formField":false,"displayOrder":8,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":8,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":true,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695191713,"createdAt":1565059312542},{"name":"hs_all_owner_ids","label":"All owner ids","description":"The value of all owner referencing properties for this object, both default and custom","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":8,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695420749,"createdAt":1565059313824},{"name":"description","label":"Deal Description","description":"Description of the deal","groupName":"dealinformation","type":"string","fieldType":"textarea","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":9,"readOnlyValue":false,"mutableDefinitionNotDeletable":false,"favorited":true,"favoritedOrder":9,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":"multi_line","optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695207049,"createdAt":1565059312595},{"name":"hs_all_team_ids","label":"All team ids","description":"The team ids corresponding to all owner referencing properties for this object, both default and custom","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":9,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695435923,"createdAt":1565059313865},{"name":"hs_all_accessible_team_ids","label":"All accessible team ids","description":"The team ids, including up the team hierarchy, corresponding to all owner referencing properties for this object, both default and custom","groupName":"dealinformation","type":"enumeration","fieldType":"select","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":10,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":true,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":true,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695375100,"createdAt":1565059313903},{"name":"num_associated_contacts","label":"Number of Associated Contacts","description":"The number of contacts associated with this deal. This property is set automatically by HubSpot.","groupName":"dealinformation","type":"number","fieldType":"number","fieldLevelPermission":null,"options":[],"readOnlyDefinition":true,"formField":false,"displayOrder":10,"readOnlyValue":true,"mutableDefinitionNotDeletable":false,"favorited":false,"favoritedOrder":-1,"calculated":true,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653696953610,"createdAt":1565059312683},{"name":"closed_lost_reason","label":"Closed Lost Reason","description":"Reason why this deal was lost","groupName":"deal_activity","type":"string","fieldType":"textarea","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":false,"displayOrder":11,"readOnlyValue":false,"mutableDefinitionNotDeletable":true,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653694993186,"createdAt":1593532658315},{"name":"closed_won_reason","label":"Closed Won Reason","description":"Reason why this deal was won","groupName":"deal_activity","type":"string","fieldType":"textarea","fieldLevelPermission":null,"options":[],"readOnlyDefinition":false,"formField":false,"displayOrder":12,"readOnlyValue":false,"mutableDefinitionNotDeletable":true,"favorited":false,"favoritedOrder":-1,"calculated":false,"externalOptions":false,"displayMode":"current_value","showCurrencySymbol":null,"hubspotDefined":true,"hidden":false,"referencedObjectType":null,"externalOptionsReferenceType":null,"optionSortStrategy":null,"createdUserId":null,"searchableInGlobalSearch":false,"hasUniqueValue":false,"numberDisplayHint":null,"currencyPropertyName":null,"textDisplayHint":null,"optionsAreMutable":null,"searchTextAnalysisMode":null,"isCustomizedDefault":false,"updatedUserId":null,"deleted":null,"updatedAt":1653695023714,"createdAt":1593532658269}]
  recorded_at: Wed, 22 Jun 2022 08:49:25 GMT
recorded_with: VCR 6.1.0
